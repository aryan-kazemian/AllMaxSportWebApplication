{"version":3,"file":"static/js/672.f86862d3.chunk.js","mappings":"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","sources":["Component/ComponentChilds/ShoppingBasket/CartItem.jsx","Component/ComponentChilds/ShoppingBasket/CartSummary.jsx","Component/ComponentChilds/ShoppingBasket/ShoppingBasket.jsx","Component/pages/ShoppingBasketPage.js"],"sourcesContent":["import { Trash2, Plus, Minus } from \"lucide-react\";\r\n\r\nconst CartItem = ({ item, onUpdateQuantity, onRemoveItem }) => {\r\n  return (\r\n    <div className=\"bg-white shadow-md rounded-lg p-4 flex items-center space-x-reverse space-x-4 rtl\">\r\n      <img\r\n        src={item.imageUrl}\r\n        alt={item.productName}\r\n        className=\"w-24 h-24 object-cover rounded-md\"\r\n      />\r\n      <div className=\"flex-grow text-right\">\r\n        <h3 className=\"font-semibold\">{item.productName}</h3>\r\n        <p className=\"text-gray-500\">\r\n          {item.price.toLocaleString(\"fa-IR\")} تومان\r\n        </p>\r\n\r\n        <div className=\"flex items-center space-x-reverse space-x-2 mt-2\">\r\n          <button\r\n            onClick={() =>\r\n              onUpdateQuantity(item.ProductId, Math.max(1, item.quantity - 1))\r\n            }\r\n            className=\"bg-gray-200 p-1 rounded-full\"\r\n          >\r\n            <Minus size={16} />\r\n          </button>\r\n          <span>{item.quantity}</span>\r\n          <button\r\n            onClick={() => onUpdateQuantity(item.ProductId, item.quantity + 1)}\r\n            className=\"bg-gray-200 p-1 rounded-full\"\r\n          >\r\n            <Plus size={16} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col items-start\">\r\n        <p className=\"font-bold\">\r\n          {(item.price * item.quantity).toLocaleString(\"fa-IR\")} تومان\r\n        </p>\r\n        <button\r\n          onClick={() => onRemoveItem(item.ProductId)}\r\n          className=\"text-red-500 hover:text-red-700 mt-2 flex items-center\"\r\n        >\r\n          <Trash2 size={16} className=\"ml-1\" />\r\n          حذف\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import { Trash2, ShoppingCart, CreditCard } from \"lucide-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CartSummary = ({ total, itemCount }) => {\r\n  // Calculate tax (10%)\r\n\r\n  const totalWithTax = total;\r\n\r\n  return (\r\n    <div className=\"bg-white shadow-md rounded-lg p-6 rtl text-right\">\r\n      <h2 className=\"text-xl font-bold mb-4 flex items-center\">\r\n        <ShoppingCart className=\"ml-2\" />\r\n        خلاصه سفارش\r\n      </h2>\r\n\r\n      <div className=\"space-y-3\">\r\n        <div className=\"flex justify-between\">\r\n          <span>تعداد کالاها</span>\r\n          <span>{itemCount} عدد</span>\r\n        </div>\r\n\r\n        <div className=\"flex justify-between\">\r\n          <span>مجموع</span>\r\n          <span>{total.toLocaleString(\"fa-IR\")} تومان</span>\r\n        </div>\r\n\r\n        <div className=\"border-t pt-3 flex justify-between font-bold text-lg\">\r\n          <span>مبلغ نهایی</span>\r\n          <span>{totalWithTax.toLocaleString(\"fa-IR\")} تومان</span>\r\n        </div>\r\n\r\n        <Link to={\"/checkout\"}>\r\n          <button className=\"w-full bg-green-500 text-white py-2 rounded-lg hover:bg-green-600 mt-4 flex items-center justify-center\">\r\n            <CreditCard className=\"ml-2\" />\r\n            تکمیل خرید\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartSummary;\r\n","import CartItem from './CartItem';  \r\nimport CartSummary from './CartSummary';  \r\n\r\nconst ShoppingBasket = ({ items, onUpdateQuantity, onRemoveItem, total }) => {  \r\n  return (  \r\n    <div className=\"grid md:grid-cols-3 gap-6 rtl\">  \r\n      <div className=\"md:col-span-2 space-y-4\">  \r\n\r\n        {items.length === 0 ? (  \r\n          <div className=\"text-center text-gray-500 py-10\">  \r\n            سبد خرید شما خالی است  \r\n          </div>  \r\n        ) : (  \r\n          items.map(item => (  \r\n            <CartItem  \r\n              key={item?.id}  \r\n              item={item}  \r\n              onUpdateQuantity={onUpdateQuantity}  \r\n              onRemoveItem={onRemoveItem}  \r\n            />  \r\n          ))  \r\n        )}  \r\n      </div>  \r\n      <CartSummary total={Number(total)} itemCount={items?.length} />  \r\n    </div>  \r\n  );  \r\n};  \r\n\r\nexport default ShoppingBasket;  ","import React, { useEffect, useState } from \"react\";\r\n// import ShoppingBasket from './ShoppingBasket';\r\nimport Swal from \"sweetalert2\";\r\nimport ShoppingBasket from \"../ComponentChilds/ShoppingBasket/ShoppingBasket\";\r\nimport Header from \"../ComponentChilds/Header\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nimport { ShoppingCart } from \"lucide-react\";\r\n\r\nconst ShoppingBasketPage = ({ basketItemCount }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  const getCartItems = () => {\r\n    const shoppingBasket = localStorage.getItem(\"shoppingBasket\");\r\n    if (!shoppingBasket) return [];\r\n    try {\r\n      return JSON.parse(shoppingBasket);\r\n    } catch (error) {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const saveCartItems = (items) => {\r\n    localStorage.setItem(\"shoppingBasket\", JSON.stringify(items));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const items = getCartItems();\r\n    setCartItems(items);\r\n  }, []);\r\n\r\n  const updateQuantity = (ProductId, newQuantity) => {\r\n    const items = getCartItems(); // Always get fresh from localStorage\r\n\r\n    if (newQuantity < 1) {\r\n      removeItem(ProductId); // Auto remove\r\n      return;\r\n    }\r\n\r\n    const updatedItems = items.map((item) =>\r\n      item.ProductId === ProductId ? { ...item, quantity: newQuantity } : item\r\n    );\r\n\r\n    setCartItems(updatedItems);\r\n    saveCartItems(updatedItems);\r\n  };\r\n\r\n  const removeItem = (ProductId) => {\r\n    Swal.fire({\r\n      title: \"آیا مطمئن هستید؟\",\r\n      text: \"این محصول از سبد خرید حذف خواهد شد!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"بله، حذف کن!\",\r\n      cancelButtonText: \"لغو\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const items = getCartItems(); // Get fresh data\r\n        const updatedItems = items.filter(\r\n          (item) => item.ProductId !== ProductId\r\n        );\r\n        setCartItems(updatedItems);\r\n        saveCartItems(updatedItems);\r\n        toast.success(\"آیتم با موفقیت حذف شد!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const calculateTotal = () => {\r\n    return cartItems.reduce(\r\n      (total, item) => total + Number(item.price) * Number(item.quantity),\r\n      0\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header basketItemCount={basketItemCount} />\r\n\r\n      <div className=\"min-h-screen bg-gray-100 p-6 text-right rtl\">\r\n        <div className=\"container mx-auto\">\r\n          {/* Progress bar */}\r\n          <div className=\"mb-10\">\r\n            <div className=\"flex justify-between items-center mb-2\">\r\n              <span className=\"font-medium text-blue-600\">سبد خرید</span>\r\n              <span className=\"font-medium text-gray-400\">اطلاعات ارسال</span>\r\n              <span className=\"font-medium text-gray-400\">پرداخت</span>\r\n              <span className=\"font-medium text-gray-400\">تکمیل سفارش</span>\r\n            </div>\r\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n              <div className=\"bg-blue-600 h-2 rounded-full w-1/4\"></div>\r\n            </div>\r\n          </div>\r\n          <ShoppingBasket\r\n            items={cartItems}\r\n            onUpdateQuantity={updateQuantity}\r\n            onRemoveItem={removeItem}\r\n            total={calculateTotal()}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ShoppingBasketPage;\r\n"],"names":["_ref","item","onUpdateQuantity","onRemoveItem","_jsxs","className","children","_jsx","src","imageUrl","alt","productName","price","toLocaleString","onClick","ProductId","Math","max","quantity","Minus","size","Plus","Trash2","total","itemCount","totalWithTax","ShoppingCart","Link","to","CreditCard","items","length","map","CartItem","id","CartSummary","Number","basketItemCount","cartItems","setCartItems","useState","getCartItems","shoppingBasket","localStorage","getItem","JSON","parse","error","saveCartItems","setItem","stringify","useEffect","removeItem","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","updatedItems","filter","toast","success","_Fragment","Header","ShoppingBasket","updateQuantity","newQuantity","reduce"],"sourceRoot":""}